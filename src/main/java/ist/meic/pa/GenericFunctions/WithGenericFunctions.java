package ist.meic.pa.GenericFunctions;

import javassist.*;
import java.io.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class WithGenericFunctions {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) throws NotFoundException, CannotCompileException, IOException {
        //System.out.println(new WithGenericFunctions().getGreeting());
        if (args.length < 1){
            System.out.println("Need a class name");
            //throw something
        } else {
            System.out.print("Class : "+args[0]+'\n');
            Loader classLoader = new Loader();

            try{
                classLoader.run(args[0],new String[0]);
            }
            catch (Throwable t){
                System.out.println("class loader failed to run");
            }
            //example code
            /*ClassPool pool = ClassPool.getDefault();
            CtClass ctClass = pool.get(args[0]);
            memoize(ctClass, ctClass.getDeclaredMethod(args[1]));
            Class<?> rtClass = ctClass.toClass();
            Method main = rtClass.getMethod("main", args.getClass());
            String[] restArgs = new String[args.length - 2];
            System.arraycopy(args, 2, restArgs, 0, restArgs.length);
            main.invoke(null, new Object[] { restArgs });
            */

            //com o class loader do javassist
            /*
            Translator translator = new UndoableTranslator();
            ClassPool pool = ClassPool.getDefault();
            Loader classLoader = new Loader();
            classLoader.addTranslator(pool, translator);
            String[] restArgs = new String[args.length - 1];
            System.arraycopy(args, 1, restArgs, 0, restArgs.length);
            classLoader.run(args[0], restArgs);
             */
        }
    }
}